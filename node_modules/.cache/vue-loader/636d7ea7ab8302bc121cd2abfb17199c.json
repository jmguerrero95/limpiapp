{"remainingRequest":"/home/ubuntu/limpiapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/limpiapp/src/components/managementuser/CompFindUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/limpiapp/src/components/managementuser/CompFindUser.vue","mtime":1584480711000},{"path":"/home/ubuntu/limpiapp/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/ubuntu/limpiapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/limpiapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport editUser from \"@/components/managementuser/editUser.vue\";\r\nimport overlayalert from '@/components/popups/CompPopsAlert.vue'\r\nimport { mapMutations,mapState } from \"vuex\";\r\nimport axios from 'axios'\r\nexport default {\r\n  components: {\r\n    overlayalert,\r\n  },\r\n  data (){\r\n    return{\r\n      users: [],\r\n      id: \"\",\r\n      page: 1,\r\n      tamaño_total: 0,\r\n      cantidad: 0,\r\n      control: 0,\r\n      preDatos:[],\r\n      id_actu:\"\",\r\n      element:\"\",\r\n    }\r\n  },\r\n  created(){\r\n    this.popup({tipo:2,overlay:false})\r\n    this.id = sessionStorage.getItem('id')\r\n    const path = 'https://limpi.app:8000/api/v1.0/users/'\r\n      axios.get(path).then((response)=> {\r\n        this.preDatos = response.data\r\n        this.tamaño_total = this.preDatos.count\r\n        this.users = this.preDatos.results.slice(0,10)\r\n        if (this.tamaño_total > 10) {\r\n          var cantidad = this.tamaño_total/10\r\n          this.cantidad = Math.ceil(cantidad)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  },\r\n  methods:{\r\n    prueba(){\r\n    },\r\n    update(id, element){\r\n      this.id_actu=id\r\n      this.element=element\r\n      this.popup({tipo:6,overlay:true,boton:true})\r\n      /*swal({\r\n        title: \"Esta seguro que desea eliminar el usuario?\",\r\n        icon: \"warning\",\r\n        buttons: true,\r\n        dangerMode: true,\r\n      })*/\r\n      /*.then((willDelete) => {\r\n        if (willDelete) {\r\n          axios.delete(path).then((response)=> {\r\n            document.getElementById(index).style.display = 'none';\r\n            this.$forceUpdate();\r\n          })\r\n          .catch((error) => {\r\n            swal({\r\n              title: \"El usuario que buscas no existe\",\r\n              icon: \"warning\",\r\n              buttons: true,\r\n              dangerMode: true,\r\n            })\r\n            console.log(error)\r\n          }) \r\n        } else {\r\n        }\r\n      });*/\r\n\r\n\r\n      /*swal({\r\n        title: 'Are you sure?',\r\n        text: \"You won't be able to revert this!\",\r\n        icon: 'warning',\r\n        buttons: ('closeModal','closeModal'),\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, delete it!'\r\n      }).then((result) => {\r\n        if (result.value==null) {\r\n          axios.delete(path).then((response)=> {\r\n          })\r\n          .catch((error) => {\r\n            console.log(error)\r\n          }) \r\n        }*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n    },\r\n    change(id){\r\n      sessionStorage.setItem('id_edit', id)\r\n    },\r\n    next(page){\r\n      var max = (this.page*10)\r\n      var min = max-10\r\n      this.users = this.preDatos.results.slice(min,max)\r\n    },\r\n    ...mapMutations([\"UpdateComponent\",\"SupportAction\",\"popup\",\"elimi\"])\r\n  },\r\n  computed: {\r\n    ...mapState([\"userData\", \"staffData\", \"eliminar\"])\r\n  },\r\n  watch:{\r\n    eliminar(newValue){\r\n      if(newValue==true){\r\n        const path = 'https://limpi.app:8000/api/v1.0/users/'+this.id_actu+'/'\r\n        axios.delete(path).then((response)=> {\r\n            document.getElementById(this.element).style.display = 'none';\r\n            this.$forceUpdate();\r\n          })\r\n          .catch((error) => {\r\n            this.popup({tipo:6,overlay:false,boton:false})\r\n            this.popup({tipo:0,overlay:true,boton:false})\r\n            console.log(error)\r\n          })\r\n          this.elimi({eliminar: false})\r\n          this.popup({tipo:6,overlay:false,boton:false})\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\n",{"version":3,"sources":["CompFindUser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CompFindUser.vue","sourceRoot":"src/components/managementuser","sourcesContent":["<template>\r\n  <!-- LIST USERS -->\r\n    <v-container>\r\n      <v-row>\r\n     <overlayalert/>\r\n  </v-row>\r\n      <v-row class=\"justify-center\">\r\n          <v-card width=\"280\" class=\"ma-2\" v-for=\"(userlist, index) of users\" :key=\"index\" :id=\"index\" >\r\n               <v-btn v-if=\"id!=userlist.id\"\r\n                  color=\"pink\"\r\n                  dark\r\n                  small\r\n                  absolute\r\n                  bottom\r\n                  right\r\n                  v-on:click=\"update(userlist.id, index)\"\r\n                  >\r\n                  <v-icon>mdi-trash-can-outline</v-icon>\r\n               </v-btn>\r\n               <v-list-item three-line>\r\n                  <v-list-item-content>\r\n                     <div class=\"overline\">Id: {{userlist.ident}}</div>\r\n                     <v-list-item-title class=\"headline primary--text\">{{userlist.firs_name}}</v-list-item-title>\r\n                     <v-list-item-subtitle>Mobil: {{userlist.userPhone}}</v-list-item-subtitle>\r\n                     <v-list-item-subtitle v-if=\"userlist.tipo== 1\">Rol: Cliente</v-list-item-subtitle>\r\n                     <v-list-item-subtitle v-if=\"userlist.tipo== 2\">Rol: Auxiliar</v-list-item-subtitle>\r\n                     <v-list-item-subtitle v-if=\"userlist.tipo== 3\">Rol: Administrador</v-list-item-subtitle>\r\n                  </v-list-item-content>\r\n                  <v-list-item-avatar\r\n                     size=\"70\"\r\n                     class=\"mt-7 mb-7\"\r\n                     >\r\n                     <img v-if=\"userlist.image!==null\"  :src=\"userlist.image\" alt=\"avatar\">\r\n                     <img v-if=\"userlist.image===null\"  src=\"@/assets/default-avatar.jpg\" alt=\"avatar\">\r\n                  </v-list-item-avatar>\r\n               </v-list-item>\r\n               <v-card-actions>\r\n                  <v-btn color=\"secondary\" small outlined rounded class=\"primary--text mb-4\" @click=\"change(userlist.id), UpdateComponent('editUser')\">\r\n                     <v-icon left>mdi-check-decagram</v-icon>\r\n                     Ver Ficha\r\n                  </v-btn>\r\n               </v-card-actions>\r\n            </v-card>\r\n            <!-- LIST USERS END -->\r\n       <div class=\"text-center\">\r\n  </div>\r\n  <v-pagination\r\n      v-model=\"page\"\r\n      :length=\"cantidad\"\r\n      @input=\"next\"\r\n    ></v-pagination>\r\n\r\n     </v-row>\r\n   </v-container>\r\n</template>\r\n<script>\r\nimport editUser from \"@/components/managementuser/editUser.vue\";\r\nimport overlayalert from '@/components/popups/CompPopsAlert.vue'\r\nimport { mapMutations,mapState } from \"vuex\";\r\nimport axios from 'axios'\r\nexport default {\r\n  components: {\r\n    overlayalert,\r\n  },\r\n  data (){\r\n    return{\r\n      users: [],\r\n      id: \"\",\r\n      page: 1,\r\n      tamaño_total: 0,\r\n      cantidad: 0,\r\n      control: 0,\r\n      preDatos:[],\r\n      id_actu:\"\",\r\n      element:\"\",\r\n    }\r\n  },\r\n  created(){\r\n    this.popup({tipo:2,overlay:false})\r\n    this.id = sessionStorage.getItem('id')\r\n    const path = 'https://limpi.app:8000/api/v1.0/users/'\r\n      axios.get(path).then((response)=> {\r\n        this.preDatos = response.data\r\n        this.tamaño_total = this.preDatos.count\r\n        this.users = this.preDatos.results.slice(0,10)\r\n        if (this.tamaño_total > 10) {\r\n          var cantidad = this.tamaño_total/10\r\n          this.cantidad = Math.ceil(cantidad)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  },\r\n  methods:{\r\n    prueba(){\r\n    },\r\n    update(id, element){\r\n      this.id_actu=id\r\n      this.element=element\r\n      this.popup({tipo:6,overlay:true,boton:true})\r\n      /*swal({\r\n        title: \"Esta seguro que desea eliminar el usuario?\",\r\n        icon: \"warning\",\r\n        buttons: true,\r\n        dangerMode: true,\r\n      })*/\r\n      /*.then((willDelete) => {\r\n        if (willDelete) {\r\n          axios.delete(path).then((response)=> {\r\n            document.getElementById(index).style.display = 'none';\r\n            this.$forceUpdate();\r\n          })\r\n          .catch((error) => {\r\n            swal({\r\n              title: \"El usuario que buscas no existe\",\r\n              icon: \"warning\",\r\n              buttons: true,\r\n              dangerMode: true,\r\n            })\r\n            console.log(error)\r\n          }) \r\n        } else {\r\n        }\r\n      });*/\r\n\r\n\r\n      /*swal({\r\n        title: 'Are you sure?',\r\n        text: \"You won't be able to revert this!\",\r\n        icon: 'warning',\r\n        buttons: ('closeModal','closeModal'),\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, delete it!'\r\n      }).then((result) => {\r\n        if (result.value==null) {\r\n          axios.delete(path).then((response)=> {\r\n          })\r\n          .catch((error) => {\r\n            console.log(error)\r\n          }) \r\n        }*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n    },\r\n    change(id){\r\n      sessionStorage.setItem('id_edit', id)\r\n    },\r\n    next(page){\r\n      var max = (this.page*10)\r\n      var min = max-10\r\n      this.users = this.preDatos.results.slice(min,max)\r\n    },\r\n    ...mapMutations([\"UpdateComponent\",\"SupportAction\",\"popup\",\"elimi\"])\r\n  },\r\n  computed: {\r\n    ...mapState([\"userData\", \"staffData\", \"eliminar\"])\r\n  },\r\n  watch:{\r\n    eliminar(newValue){\r\n      if(newValue==true){\r\n        const path = 'https://limpi.app:8000/api/v1.0/users/'+this.id_actu+'/'\r\n        axios.delete(path).then((response)=> {\r\n            document.getElementById(this.element).style.display = 'none';\r\n            this.$forceUpdate();\r\n          })\r\n          .catch((error) => {\r\n            this.popup({tipo:6,overlay:false,boton:false})\r\n            this.popup({tipo:0,overlay:true,boton:false})\r\n            console.log(error)\r\n          })\r\n          this.elimi({eliminar: false})\r\n          this.popup({tipo:6,overlay:false,boton:false})\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\n</script>"]}]}